# CSS
'.source.css':
  'comment block':
    prefix: 'cm'
    body: """
    /* --------------------------------
     * $0
     * -------------------------------- */
    """

# SCSS
'.source.scss':
  'comment block':
    prefix: 'cm'
    body: """
    // --------------------------------
    // $0
    // --------------------------------
    """

# HTML
'.text.html':
  'html':
    prefix: 'html'
    body: '''
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>${1:Document}</title>
    </head>
    <body>
    $2
    </body>
    </html>
    '''

# JavaScript
'.source.js':
  'log':
    prefix: 'l'
    body: 'console.log($0);'

  'table':
    prefix: 't'
    body: 'console.table($0);'

# Ruby
'.source.ruby':
  '=>':
    prefix: '='
    body: ' => '

  'magic comment':
    prefix: 'cod'
    body: '# -*- coding: utf-8 -*-'

  "require '..'":
    prefix: 'req'
    body: "require '$0'"

  'task :.. do .. end':
    prefix: 'ta'
    body: 'task :$1 do\n\t$0\nend'

  'initialize':
    prefix: 'init'
    body: 'def initialize\n  $0\nend'

# Rails
'.source.ruby.rails':
  'belongs_to':
    prefix: 'bl'
    body: 'belongs_to :$1'

  'render (text)':
    prefix: 'rt'
    body: "render text: '${1:text to render...}'"

# Rails(html), Ruby(html)
'.text.html.ruby, .text.html.erb':
  'do block':
    prefix: 'do'
    body: '<% $1 do${2: |${3:variable}| }%>\n\t$0\n<% end %>'

  'end':
    prefix: 'end'
    body: '<% end %>'

  'form_for':
    prefix: 'ff'
    body: '<%= form_for($1) do |f| %>\n\t$2\n<% end %>'

  'link_to':
    prefix: 'lt'
    body: "<%= link_to ${1:\'${2:name}\'}, ${3:path} %>"

# RSpec
'.source.ruby.rspec':
  'before':
    prefix: 'bef'
    body: 'before${2:(${1::each})} do\n  $0\nend'

  'context':
    prefix: 'con'
    body: "context '${1:context}' do\n  $0\nend"

  'describe (String)':
    prefix: 'des'
    body: "describe '${1:subject}' do\n  $0\nend"

  'it (does something)':
    prefix: 'it'
    body: "it '${1:does something}'${2: do\n  $0\nend}"

# PHP
'.source.php':
  'class …':
    prefix: 'cla'
    body: 'class ${1:ClassName}${2: extends ${3:AnotherClass}}\n{\n\t$4\n\tfunction ${5:__construct}(${6:argument})\n\t{\n\t\t${0}\n\t}\n}\n'

  'protected':
    prefix: 'pro'
    body: 'protected $${0};'

  'function …':
    prefix: 'fun'
    body: "${1:public }function ${2:FunctionName}(${3:$${4:value}${5:=''}})\n{\n\t${0}\n}"

  'if …':
    prefix: 'if'
    body: 'if (${1:condition}) {\n\t$0\n}'

  'log(cake)':
    prefix: 'log'
    body: '$this->log($0);'

  '->':
    prefix: '-'
    body: '->'

  '=>':
    prefix: '='
    body: '=>'

  '$this->':
    prefix: '$'
    body: '$this->'

  'var_dump()':
    prefix: 'v'
    body: 'var_dump($0);'

  'echo()':
    prefix: 'e'
    body: 'echo \'$0\';'

  'print_r()':
    prefix: 'pr'
    body: 'print_r($0);'

  "exit()":
    prefix: "x"
    body: "exit($0);"

  "var_dump() and exit()":
    prefix: "ve"
    body: """
      var_dump("${1:called}");
      exit();
    """

  "debug_backtrace()":
    prefix: "back"
    body: "debug_backtrace();"

# CodeIgniter
  'if …':
    'prefix': 'if'
    'body': """
      if (${1:condition})
      {
      \t${0:# code...}
      }
    """

  "$this->input->post('')":
    prefix: "post"
    body: "$this->input->post('$1')"

  "$this->load->model('')":
    prefix: "lm"
    body: "$this->load->model('$1');"

  "$this->load->view('')":
    prefix: "lv"
    body: "$this->load->view('$1');"

  "$this->load->":
    prefix: "load"
    body: "$this->load->$1;"

  "'key' => 'value'":
    prefix: "d"
    body: "'${1:key}' => '${2:val}'"

  "log_message('key', 'message')":
    prefix: "log"
    body: "log_message('${1:key}', '${2:message}');"

  "log_message('info', '')":
    prefix: "logi"
    body: "log_message('info', '${1}');"

  "log_message('warn', '')":
    prefix: "logw"
    body: "log_message('warn', '${1}');"

  "comment block":
    prefix: "cm"
    body: """
    /**
     * $0
     *
     */
    """

'.text.html.php':
  '<? ;?>':
    prefix: 's'
    body: '<? $0?;>'

  '<?=?>':
    prefix: 's='
    body: '<?=$0?>'
